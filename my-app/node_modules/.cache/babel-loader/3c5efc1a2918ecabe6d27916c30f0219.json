{"ast":null,"code":"import { assertArgument } from \"../utils/index.js\";\nimport { decodeBits } from \"./bit-reader.js\";\nimport { decodeOwl } from \"./decode-owl.js\";\n/**\n *  @_ignore\n */\nexport function decodeOwlA(data, accents) {\n  let words = decodeOwl(data).join(\",\");\n  // Inject the accents\n  accents.split(/,/g).forEach(accent => {\n    const match = accent.match(/^([a-z]*)([0-9]+)([0-9])(.*)$/);\n    assertArgument(match !== null, \"internal error parsing accents\", \"accents\", accents);\n    let posOffset = 0;\n    const positions = decodeBits(parseInt(match[3]), match[4]);\n    const charCode = parseInt(match[2]);\n    const regex = new RegExp(\"([\".concat(match[1], \"])\"), \"g\");\n    words = words.replace(regex, (all, letter) => {\n      const rem = --positions[posOffset];\n      if (rem === 0) {\n        letter = String.fromCharCode(letter.charCodeAt(0), charCode);\n        posOffset++;\n      }\n      return letter;\n    });\n  });\n  return words.split(\",\");\n}","map":{"version":3,"sources":["../../src.ts/wordlists/decode-owla.ts"],"names":[],"mappings":"AAAA,SAAS,cAAc,QAAQ,mBAAmB;AAElD,SAAS,UAAU,QAAQ,iBAAiB;AAC5C,SAAS,SAAS,QAAQ,iBAAiB;AAE3C;;AAEG;AACH,OAAM,SAAU,UAAU,CAAC,IAAY,EAAE,OAAe,EAAA;EACpD,IAAI,KAAK,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;EAErC;EACA,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,OAAO,CAAE,MAAM,IAAI;IAEnC,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,+BAA+B,CAAC;IAC3D,cAAc,CAAC,KAAK,KAAK,IAAI,EAAE,gCAAgC,EAAE,SAAS,EAAE,OAAO,CAAC;IAEpF,IAAI,SAAS,GAAG,CAAC;IACjB,MAAM,SAAS,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAC1D,MAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACnC,MAAM,KAAK,GAAG,IAAI,MAAM,MAAA,MAAA,CAAO,KAAK,CAAC,CAAC,CAAE,SAAM,GAAG,CAAC;IAClD,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,MAAM,KAAI;MACzC,MAAM,GAAG,GAAG,EAAE,SAAS,CAAC,SAAS,CAAC;MAClC,IAAI,GAAG,KAAK,CAAC,EAAE;QACX,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC;QAC5D,SAAS,EAAE;MACd;MACD,OAAO,MAAM;IACjB,CAAC,CAAC;EACN,CAAC,CAAC;EAEF,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC;AAC3B","sourceRoot":"","sourcesContent":["import { assertArgument } from \"../utils/index.js\";\nimport { decodeBits } from \"./bit-reader.js\";\nimport { decodeOwl } from \"./decode-owl.js\";\n/**\n *  @_ignore\n */\nexport function decodeOwlA(data, accents) {\n    let words = decodeOwl(data).join(\",\");\n    // Inject the accents\n    accents.split(/,/g).forEach((accent) => {\n        const match = accent.match(/^([a-z]*)([0-9]+)([0-9])(.*)$/);\n        assertArgument(match !== null, \"internal error parsing accents\", \"accents\", accents);\n        let posOffset = 0;\n        const positions = decodeBits(parseInt(match[3]), match[4]);\n        const charCode = parseInt(match[2]);\n        const regex = new RegExp(`([${match[1]}])`, \"g\");\n        words = words.replace(regex, (all, letter) => {\n            const rem = --positions[posOffset];\n            if (rem === 0) {\n                letter = String.fromCharCode(letter.charCodeAt(0), charCode);\n                posOffset++;\n            }\n            return letter;\n        });\n    });\n    return words.split(\",\");\n}\n//# sourceMappingURL=decode-owla.js.map"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/home/savelii/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/Web3-Login/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { defineProperties } from \"../utils/index.js\";\n/**\n *  A Wordlist represents a collection of language-specific\n *  words used to encode and devoce [[link-bip-39]] encoded data\n *  by mapping words to 11-bit values and vice versa.\n */\nexport class Wordlist {\n  /**\n   *  Creates a new Wordlist instance.\n   *\n   *  Sub-classes MUST call this if they provide their own constructor,\n   *  passing in the locale string of the language.\n   *\n   *  Generally there is no need to create instances of a Wordlist,\n   *  since each language-specific Wordlist creates an instance and\n   *  there is no state kept internally, so they are safe to share.\n   */\n  constructor(locale) {\n    _defineProperty(this, \"locale\", void 0);\n    defineProperties(this, {\n      locale\n    });\n  }\n  /**\n   *  Sub-classes may override this to provide a language-specific\n   *  method for spliting %%phrase%% into individual words.\n   *\n   *  By default, %%phrase%% is split using any sequences of\n   *  white-space as defined by regular expressions (i.e. ``/\\s+/``).\n   */\n  split(phrase) {\n    return phrase.toLowerCase().split(/\\s+/g);\n  }\n  /**\n   *  Sub-classes may override this to provider a language-specific\n   *  method for joining %%words%% into a phrase.\n   *\n   *  By default, %%words%% are joined by a single space.\n   */\n  join(words) {\n    return words.join(\" \");\n  }\n}","map":{"version":3,"sources":["../../src.ts/wordlists/wordlist.ts"],"names":[],"mappings":";AAAA,SAAS,gBAAgB,QAAQ,mBAAmB;AAEpD;;;;AAIG;AACH,OAAM,MAAgB,QAAQ,CAAA;EAG1B;;;;;;;;;AASG;EACH,WAAA,CAAY,MAAc,EAAA;IAAA,eAAA;IACtB,gBAAgB,CAAW,IAAI,EAAE;MAAE;IAAM,CAAE,CAAC;EAChD;EAEA;;;;;;AAMG;EACH,KAAK,CAAC,MAAc,EAAA;IAChB,OAAO,MAAM,CAAC,WAAW,CAAA,CAAE,CAAC,KAAK,CAAC,MAAM,CAAC;EAC7C;EAEA;;;;;AAKG;EACH,IAAI,CAAC,KAAoB,EAAA;IACrB,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;EAC1B;AAeH","sourceRoot":"","sourcesContent":["import { defineProperties } from \"../utils/index.js\";\n/**\n *  A Wordlist represents a collection of language-specific\n *  words used to encode and devoce [[link-bip-39]] encoded data\n *  by mapping words to 11-bit values and vice versa.\n */\nexport class Wordlist {\n    locale;\n    /**\n     *  Creates a new Wordlist instance.\n     *\n     *  Sub-classes MUST call this if they provide their own constructor,\n     *  passing in the locale string of the language.\n     *\n     *  Generally there is no need to create instances of a Wordlist,\n     *  since each language-specific Wordlist creates an instance and\n     *  there is no state kept internally, so they are safe to share.\n     */\n    constructor(locale) {\n        defineProperties(this, { locale });\n    }\n    /**\n     *  Sub-classes may override this to provide a language-specific\n     *  method for spliting %%phrase%% into individual words.\n     *\n     *  By default, %%phrase%% is split using any sequences of\n     *  white-space as defined by regular expressions (i.e. ``/\\s+/``).\n     */\n    split(phrase) {\n        return phrase.toLowerCase().split(/\\s+/g);\n    }\n    /**\n     *  Sub-classes may override this to provider a language-specific\n     *  method for joining %%words%% into a phrase.\n     *\n     *  By default, %%words%% are joined by a single space.\n     */\n    join(words) {\n        return words.join(\" \");\n    }\n}\n//# sourceMappingURL=wordlist.js.map"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/**\n *  Explain UUID and link to RFC here.\n *\n *  @_subsection: api/utils:UUID  [about-uuid]\n */\nimport { getBytes, hexlify } from \"./data.js\";\n/**\n *  Returns the version 4 [[link-uuid]] for the %%randomBytes%%.\n *\n *  @see: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\n */\nexport function uuidV4(randomBytes) {\n  const bytes = getBytes(randomBytes, \"randomBytes\");\n  // Section: 4.1.3:\n  // - time_hi_and_version[12:16] = 0b0100\n  bytes[6] = bytes[6] & 0x0f | 0x40;\n  // Section 4.4\n  // - clock_seq_hi_and_reserved[6] = 0b0\n  // - clock_seq_hi_and_reserved[7] = 0b1\n  bytes[8] = bytes[8] & 0x3f | 0x80;\n  const value = hexlify(bytes);\n  return [value.substring(2, 10), value.substring(10, 14), value.substring(14, 18), value.substring(18, 22), value.substring(22, 34)].join(\"-\");\n}","map":{"version":3,"sources":["../../src.ts/utils/uuid.ts"],"names":[],"mappings":"AAAA;;;;AAIG;AACH,SAAS,QAAQ,EAAE,OAAO,QAAQ,WAAW;AAI7C;;;;AAIG;AACH,OAAM,SAAU,MAAM,CAAC,WAAsB,EAAA;EACzC,MAAM,KAAK,GAAG,QAAQ,CAAC,WAAW,EAAE,aAAa,CAAC;EAElD;EACA;EACA,KAAK,CAAC,CAAC,CAAC,GAAI,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAI,IAAI;EAEnC;EACA;EACA;EACA,KAAK,CAAC,CAAC,CAAC,GAAI,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAI,IAAI;EAEnC,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;EAE5B,OAAO,CACJ,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EACtB,KAAK,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,EACvB,KAAK,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,EACvB,KAAK,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,EACvB,KAAK,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CACzB,CAAC,IAAI,CAAC,GAAG,CAAC;AACf","sourceRoot":"","sourcesContent":["/**\n *  Explain UUID and link to RFC here.\n *\n *  @_subsection: api/utils:UUID  [about-uuid]\n */\nimport { getBytes, hexlify } from \"./data.js\";\n/**\n *  Returns the version 4 [[link-uuid]] for the %%randomBytes%%.\n *\n *  @see: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)\n */\nexport function uuidV4(randomBytes) {\n    const bytes = getBytes(randomBytes, \"randomBytes\");\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const value = hexlify(bytes);\n    return [\n        value.substring(2, 10),\n        value.substring(10, 14),\n        value.substring(14, 18),\n        value.substring(18, 22),\n        value.substring(22, 34),\n    ].join(\"-\");\n}\n//# sourceMappingURL=uuid.js.map"]},"metadata":{},"sourceType":"module"}